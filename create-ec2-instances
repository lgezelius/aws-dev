#!/bin/bash

export AWS_PAGER=""

ec2InstanceName="ec2-demo"
imageId="ami-04681a1dbd79675a5" # Amazon Linux 2 AMI 2.0.20180810 x86_64 HVM gp2
endpointUrl="http://localhost:4566"
profile="localstack"

# Get Default VPC Id
vpcId=$(aws ec2 describe-vpcs \
  --query "Vpcs[?IsDefault==\`true\`].VpcId" --output text \
  --endpoint-url "$endpointUrl" --profile "$profile") || exit 1
if [[ -z $vpcId ]]; then
  echo "Error. No default VPC found."
  exit 1
fi

# Create Internet Gateway for the VPC if necessary
internetGatewayIds=$(aws ec2 describe-internet-gateways \
  --query "InternetGateways[?Attachments[?VpcId=='$vpcId']].InternetGatewayId" \
  --output text \
  --endpoint-url "$endpointUrl" --profile "$profile") || exit 1
internetGatewayCount=$(wc -w <<< "$internetGatewayIds")
if [[ $internetGatewayCount -eq 0 ]]; then
  echo "Creating Internet Gateway..."
  internetGatewayId=$(aws ec2 create-internet-gateway \
    --query 'InternetGateway.InternetGatewayId' --output text \
    --endpoint-url "$endpointUrl" --profile "$profile") || exit 1

  echo "Attaching Internet Gateway to VPC $vpcId..."
  output=$(aws ec2 attach-internet-gateway --vpc-id "$vpcId" --internet-gateway-id "$internetGatewayId" \
    --endpoint-url "$endpointUrl" --profile "$profile") || exit 1
fi

# Create Key Pair if necessary
keyPair=$(aws ec2 describe-key-pairs \
  --query "KeyPairs[?KeyName=='$ec2InstanceName']" --output text \
  --endpoint-url "$endpointUrl" --profile "$profile") || exit 1
if [[ -z $keyPair ]]; then
  echo "Creating key pair named $ec2InstanceName..."
  keyMaterial=$(aws ec2 create-key-pair --key-name "$ec2InstanceName" \
    --query "KeyMaterial" --output text \
    --endpoint-url "$endpointUrl" --profile "$profile") || exit 1
  echo "Saving private key file: ~/.ssh/ec2-instance-demo..."
  echo "$keyMaterial" > ~/.ssh/ec2-instance-demo || exit 1
fi

echo "Creating security group named $ec2InstanceName..."
groupId=$(aws ec2 create-security-group \
  --group-name "$ec2InstanceName" \
  --description "security group for $ec2InstanceName" \
  --vpc-id "$vpcId" \
  --query "GroupId" --output text \
  --endpoint-url "$endpointUrl" --profile "$profile") || exit 1

echo "Creating security group ingress rule to allow SSH inbound..."
output=$(aws ec2 authorize-security-group-ingress \
  --group-id "${groupId}" \
  --protocol tcp --port 22 --cidr 0.0.0.0/0 \
  --endpoint-url "$endpointUrl" --profile "$profile") || exit 1

# TODO: add subnets
echo "Launching instance(s)..."
output=$(aws ec2 run-instances \
  --image-id "$imageId" \
  --count 2 \
  --instance-type t2.micro \
  --key-name "$ec2InstanceName" \
  --security-group-ids "$groupId" \
  --endpoint-url "$endpointUrl" --profile "$profile") || exit 1

  exit 0